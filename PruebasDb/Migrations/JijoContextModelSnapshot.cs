// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PruebasDb;

namespace PruebasDb.Migrations
{
    [DbContext(typeof(JijoContext))]
    partial class JijoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Modelos.ComentarioModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Contenido")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<string>("HiloId")
                        .HasColumnType("text");

                    b.Property<string>("MediaId")
                        .HasColumnType("text");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MediaId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("Modelos.HiloModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Bump")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Contenido")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Estado")
                        .HasColumnType("integer");

                    b.Property<string>("MediaId")
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .HasColumnType("text");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MediaId");

                    b.ToTable("Hilos");
                });

            modelBuilder.Entity("Modelos.MediaModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Hash")
                        .HasColumnType("text");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.Property<string>("VistaPreviaUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MediaModel");
                });

            modelBuilder.Entity("Modelos.UsuarioModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Contraseña")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Creacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nick")
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Modelos.ComentarioModel", b =>
                {
                    b.HasOne("Modelos.MediaModel", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId");
                });

            modelBuilder.Entity("Modelos.HiloModel", b =>
                {
                    b.HasOne("Modelos.MediaModel", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId");
                });
#pragma warning restore 612, 618
        }
    }
}

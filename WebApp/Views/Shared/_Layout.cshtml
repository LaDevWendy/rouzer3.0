@inject RChanContext _context
@using Microsoft.Extensions.DependencyInjection;

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    @* <meta name="viewport" content="width=device-width, initial-scale=1.0" /> *@
    <meta name="viewport" content="width=device-width, user-scalable=no">

    <title>RChan @ViewData["Title"]</title>
    @* <link rel="stylesheet" type="text/css" href="//at.alicdn.com/t/font_o5hd5vvqpoqiwwmi.css"> *@

            <!-- ICONOS -->
    @* <link rel="stylesheet" href="https://cdn.rawgit.com/luizbills/feather-icon-font/v4.7.0/dist/feather.css"> *@
    <link rel="stylesheet" href="~/iconos/iconos.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="~/js/css/bundle.css" />

    @{
        if (Context.User != null)
        {
            // The example uses base class, IdentityUser, yours may be called 
            // ApplicationUser if you have added any extra fields to the model
            var userManager = Context.RequestServices
                .GetRequiredService<UserManager<UsuarioModel>>();
            var signInManager = Context.RequestServices
                .GetRequiredService<SignInManager<UsuarioModel>>();

            UsuarioModel user = await userManager.GetUserAsync(Context.User);

            if(signInManager.IsSignedIn(Context.User))
            {
                await signInManager.RefreshSignInAsync(user);
            }
        }

    }

    @{
        var globalState = new {
            Usuario = new {
                EstaAutenticado = User.Identity.IsAuthenticated,
                UserName = User.Identity.Name,
                @* Role = User.Claims.FirstOrDefault(c => c.ValueType == "Role").Value, *@
                EsAdmin = User.EsAdmin(),
                EsMod = User.EsMod(),
                EsAyudante = User.EsAyudante(),
            }
        };
    }
    <script>
        window.config = {
            categorias: @Json.Serialize(Constantes.Categorias)
        }
        window.globalState = @Json.Serialize(globalState)
    </script>

    <script>
        @if(User.Identity.IsAuthenticated) {
            <text>const tieneSesion = true;</text>
            
        }else {
            
            <text>const tieneSesion = false;</text>
        }
    </script>
</head>
<body>

    <div class="debug">
        <p>Esta Autenticado: @User.Identity.IsAuthenticated</p>
        @foreach (var cliam in User.Claims)
        {
            <p>@cliam.Type: @cliam.Value</p>
        }
    </div>

       @* Notificaciones *@
            @if(User.Identity.IsAuthenticated){


                var notificaciones = await _context.Notificaciones
                    .Where(n => n.UsuarioId == User.GetId())
                    .Select(n => new NotificacionViewModel{
                        Id = n.Id,
                        HiloId = n.HiloId,
                        HiloTitulo = _context.Hilos.First(h => h.Id == n.HiloId).Titulo,
                        HiloImagen = _context.Medias.First(m => m.Id == _context.Hilos.First(h => h.Id == n.HiloId).MediaId).VistaPreviaCuadrado,
                        ComentarioId = n.ComentarioId,
                        Tipo = n.Tipo,
                        Conteo = n.Conteo,
                    })
                    .AsNoTracking()
                    .ToListAsync();

                <script>
                    window.notificaciones = @Json.Serialize(notificaciones)
                </script>
                
                <div class="debug notdi-debug">
                    @Json.Serialize(notificaciones)
                </div>
    }
    <div id="svelte-navbar"></div>
        @RenderBody()
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2019 - WebApp - <a asp-area="" asp-page="/Privacy">Privacy</a>
        </div>
    </footer>


    @* <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.0/axios.min.js"></script> *@

    @* <partial name="_ValidationScriptsPartial" /> *@
    <script src="~/js/site.js" asp-append-version="true"></script>
    @* <script src="~/svelte/public/build/bundle.js"></script> *@
    <script src="~/js/bundle.js"></script>

    @RenderSection("Scripts", required: false)
</body>
</html>
